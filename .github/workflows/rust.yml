on:
  push:
    branches:
      - master

name: Continuous Integration

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'
  build:
    needs: quickcheck
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test
  debbuild:
    needs: [build]
    runs-on: ubuntu-latest
    name: Amd64Deb
    steps:
    - uses: actions/checkout@v2
    - name: BuildDeb
      id: debbuild
      uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
    - name: Upload Deb Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64deb
        path: ./target/x86_64-unknown-linux-musl/debian/*
  raspbianbuild:
    needs: [build]
    runs-on: ubuntu-latest
    name: Armv7Deb
    steps:
    - uses: actions/checkout@v2
    - name: BuildDeb
      id: debbuild
      uses: ebbflow-io/cargo-deb-armv7-debian@1.0
    - name: Upload Deb Artifact
      uses: actions/upload-artifact@v2
      with:
        name: armv7deb
        path: ./target/armv7-unknown-linux-musleabihf/debian/*
  macosbuild:
    needs: [build, quickcheck]
    runs-on: macos-latest
    name: MacOS
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Zip up macos binaries
      run: 'zip -j charlatan_${{needs.quickcheck.outputs.version}}_macos.zip ./target/release/charlatan ./target/release/charlatan'
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: 'charlatan_${{needs.quickcheck.outputs.version}}_macos.zip'
    - name: Upload Bin Artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: ./target/release/ebbflow
    - name: Upload Daemon Artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: ./target/release/ebbflowd
  amd64binaries:
    needs: [build, quickcheck]
    runs-on: ubuntu-latest
    name: Amd64StaticBinaries
    steps:
    - uses: actions/checkout@v2
    - name: StaticBinaryBuild
      id: amd64staticbuild
      uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
      with:
        cmd: cargo build --release --target=x86_64-unknown-linux-musl
    - name: Upload Daemon Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64binaries
        path: ./target/x86_64-unknown-linux-musl/release/charlatan
    - name: Upload Ebbflow Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64binaries
        path: ./target/x86_64-unknown-linux-musl/release/charlatan
    - run: 'zip -j amd64binaries.zip ./target/x86_64-unknown-linux-musl/release/charlatan ./target/x86_64-unknown-linux-musl/release/charlatan'
    - name: Upload Zip Artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd64binaries
        path: amd64binaries.zip
  arm7binaries:
    needs: [build, quickcheck]
    runs-on: ubuntu-latest
    name: Armv7StaticBinaries
    steps:
    - uses: actions/checkout@v2
    - name: StaticBinaryBuild
      id: armv7statibuild
      uses: ebbflow-io/cargo-deb-armv7-debian@1.0
      with:
        cmd: cargo build --release --target=armv7-unknown-linux-musleabihf
    - name: Upload Daemon Artifact
      uses: actions/upload-artifact@v2
      with:
        name: armv7binaries
        path: ./target/armv7-unknown-linux-musleabihf/release/charlatan
    - name: Upload Ebbflow Artifact
      uses: actions/upload-artifact@v2
      with:
        name: armv7binaries
        path: ./target/armv7-unknown-linux-musleabihf/release/charlatan
    - run: 'zip -j armv7binaries.zip ./target/armv7-unknown-linux-musleabihf/release/charlatan ./target/armv7-unknown-linux-musleabihf/release/charlatan'
    - name: Upload Zip Artifact
      uses: actions/upload-artifact@v2
      with:
        name: armv7binaries
        path: armv7binaries.zip
  update_release_draft:
    needs: [quickcheck, arm7binaries, amd64binaries, macosbuild, raspbianbuild, debbuild]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: '${{ needs.quickcheck.outputs.version }}'
          release_name: Release ${{ needs.quickcheck.outputs.version }}
          body: 'Automated release for Charlatan via GitHub Actions'
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v2
      - run: ls -lha
      - name: Upload amd64 deb Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64deb/charlatan_${{needs.quickcheck.outputs.version}}_amd64.deb
          asset_name: 'charlatan_${{needs.quickcheck.outputs.version}}_amd64.deb'
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload armv7 deb Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./armv7deb/charlatan_${{needs.quickcheck.outputs.version}}_armhf.deb
          asset_name: 'charlatan_${{needs.quickcheck.outputs.version}}_armhf.deb'
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload Macos Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/ebbflow_${{needs.quickcheck.outputs.version}}_macos.zip
          asset_name: 'charlatan_${{needs.quickcheck.outputs.version}}_macos.zip'
          asset_content_type: application/zip
      - name: Upload Armv7 Static Binary Zip Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./armv7binaries/armv7binaries.zip
          asset_name: 'charlatan_${{needs.quickcheck.outputs.version}}_linux_armv7_binaries.zip'
          asset_content_type: application/zip
      - name: Upload Amd64 Static Binary Zip Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64binaries/amd64binaries.zip
          asset_name: 'charlatan_${{needs.quickcheck.outputs.version}}_linux_amd64_binaries.zip'
          asset_content_type: application/zip
